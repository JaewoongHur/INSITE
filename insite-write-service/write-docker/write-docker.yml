version: '3'
services:
  influxdb:
    image: influxdb:latest
    ports:
      - "8086:8086"
    volumes:
      - "./influxdb/data:/var/lib/influxdb2"
      - "./influxdb/config:/etc/influxdb2"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=thirtyman
      - DOCKER_INFLUXDB_INIT_PASSWORD=behappy1234
      - DOCKER_INFLUXDB_INIT_ORG=thirty
      - DOCKER_INFLUXDB_INIT_BUCKET=insite
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=behappy1234
    container_name: influxdb-insite
    networks:
      - elk

  zk:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    restart: always
    hostname: zk
    ports:
      - "2181:2181"
    volumes:
      - "~/zk-cluster/zk1/data:/data"
    networks:
      - elk

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    restart: on-failure
    depends_on:
      - zk
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
      KAFKA_CREATE_TOPICS: "data:1:1,button:1:1"
      KAFKA_ZOOKEEPER_CONNECT: "zk:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      TZ: Asia/Seoul
    networks:
      - elk

  telegraf:
    image: telegraf:latest
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      INFLUXDB_URL: http://influxdb-insite:8086
      INFLUXDB_TOKEN: behappy1234
      INFLUXDB_ORG: thirty
      INFLUXDB_BUCKET: insite
    depends_on:
      - influxdb
    container_name: telegraf-insite
    networks:
      - elk

networks:
  elk:
    external: true

